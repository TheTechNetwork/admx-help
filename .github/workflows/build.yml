name: Build ADMX Viewer

on:
  push:
    branches: [main]
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          echo "Installing Python dependencies..."
          pip install -r scripts/requirements.txt

      - name: Scrape Microsoft Download Page and Download ZIPs
        shell: pwsh
        run: |
          $ErrorActionPreference = "Continue"
          mkdir zips
          Write-Host "Fetching Microsoft download page..."
          $page = Invoke-WebRequest -Uri "https://www.microsoft.com/en-us/download/details.aspx?id=55319"
          $links = $page.Links | Where-Object { $_.href -match "\.zip$" }
          Write-Host "Found $($links.Count) zip links."
          foreach ($link in $links) {
              $url = $link.href
              if ($url -notmatch '^https?://') {
                  $url = "https://download.microsoft.com$url"
              }
              $filename = [System.IO.Path]::GetFileName($url)
              Write-Host "Downloading $filename from $url"
              try {
                  Invoke-WebRequest -Uri $url -OutFile ".\\zips\\$filename"
              } catch {
                  Write-Host "Failed to download $url"
              }
          }
          Write-Host "Download complete. Listing contents:"
          Get-ChildItem -Path zips

      - name: Extract PolicyDefinitions from ZIPs
        shell: pwsh
        run: |
          mkdir admxfiles
          Get-ChildItem -Path zips -Filter *.zip | ForEach-Object {
              $dest = New-Item -ItemType Directory -Path tmp -Force
              Write-Host "Extracting $($_.FullName) to $($dest.FullName)"
              Expand-Archive -Path $_.FullName -DestinationPath $dest.FullName -Force
              $policyDirs = Get-ChildItem -Path $dest.FullName -Recurse -Directory | Where-Object { $_.Name -eq "PolicyDefinitions" }
              foreach ($pd in $policyDirs) {
                  Write-Host "Copying ADMX from $($pd.FullName)"
                  Copy-Item -Path "$($pd.FullName)\\*" -Destination admxfiles -Recurse -Force -ErrorAction SilentlyContinue
              }
              Remove-Item tmp -Recurse -Force
          }
          Write-Host "Extraction complete. Listing admxfiles:"
          Get-ChildItem admxfiles

      - name: Run ADMX Parser
        run: |
          echo "Running parse_admx.py..."
          python scripts/parse_admx.py admxfiles/ public/
          echo "Listing output directory:"
          dir public

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
